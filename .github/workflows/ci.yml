name: Terraform CI/CD with Vercel

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  terraform:
    name: "Terraform Infrastructure"
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Cloner le repository
        uses: actions/checkout@v3

      - name: 🌍 Installer Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.0"

      - name: 🏗 Initialiser Terraform
        run: terraform init
        working-directory: ./terraform  # Change ce chemin si besoin

      - name: ✅ Vérifier le format et valider le code
        run: |
          terraform fmt -check
          terraform validate
        working-directory: ./terraform

      - name: 📊 Générer le plan Terraform
        run: terraform plan -out=tfplan
        working-directory: ./terraform
        env:
          TF_VAR_example: "value"  # Remplace par tes variables si besoin

      - name: 🚀 Appliquer le plan Terraform
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve tfplan
        working-directory: ./terraform

  ci:
    name: "Build & Test"
    runs-on: ubuntu-latest
    needs: terraform  # Attendre que Terraform termine avant de lancer CI

    steps:
      - name: 📥 Cloner le repository
        uses: actions/checkout@v3

      - name: 📦 Installer les dépendances
        run: npm install

      - name: ✅ Lancer les tests
        run: npm test

  deploy:
    name: "Deploy to Vercel"
    runs-on: ubuntu-latest
    needs: ci  # Attendre que les tests CI passent avant de déployer

    steps:
      - name: 📥 Cloner le repository
        uses: actions/checkout@v3

      - name: 🚀 Déployer sur Vercel
        run: vercel --prod --token=${{ secrets.VERCEL_TOKEN }}
